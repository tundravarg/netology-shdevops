---

- name: Print OS facts
  tags:
    - test
  hosts: all
  tasks:
    - name: Print OS
      debug:
        msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

- name: Install Clickhouse
  tags:
    - clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.command:
        argv:
          - clickhouse-server
          - --daemon
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        disable_gpg_check: True
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  tags:
    - vector
  hosts: vector
  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz
        dest: ./vector-{{ vector_version }}.tar.gz
    - name: Install
      block:
        - ansible.builtin.unarchive:
            src: ./vector-{{ vector_version }}.tar.gz
            remote_src: true
            dest: "/opt"
        - ansible.builtin.file:
            src: /opt/vector-x86_64-unknown-linux-gnu
            dest: /opt/vector
            state: link
        - ansible.builtin.file:
            path: /etc/vector
            state: directory
        - ansible.builtin.file:
            path: /var/lib/vector
            state: directory
        - ansible.builtin.template:
            src: ./templates/vector.yaml
            dest: /etc/vector/vector.yaml
      notify: Start Vector service
  handlers:
    - name: Start Vector service
      become: true
      ansible.builtin.shell:
        cmd: |
          pkill -9 vector;
          nohup /opt/vector/bin/vector --watch-config 2>> /var/log/vector.log &
